const fs = require('fs-extra')
const path = require('path')
const low = require('lowdb')
const FileSync = require('lowdb/adapters/FileSync')

const DB_FILE = path.resolve(__dirname, '../db/db.json')

module.exports = () => {
  if (!fs.existsSync(DB_FILE)) {
    fs.writeFileSync(DB_FILE, '{}')
  }

  const adapter = new FileSync(DB_FILE)
  const db = low(adapter)

  // 设置默认数据结构 (如果你的 JSON 文件为空)
  // 推荐设置，不设置的话如果是新的 json 文件,或者变更了结构,会报错
  db.defaults({
    playbook: [
      {
        id: 290,
        name: 'test_001',
        description: '[请不要删除，谢谢]默认剧本4-基于XXX事件中的目标IP进行威胁行为分析',
        status: 0,
        version: '1.0.1',
        create_time: '2019-10-22T16:53:58.224767',
        update_time: '2019-10-22T17:54:02.501712'
      }
    ],
    // app池
    app: [
      {
        'id': 273,
        'name': 'IPS',
        'logoURL': '/api/static/app/logo_ips.svg'
      },
      {
        'id': 274,
        'name': 'Mail',
        'logoURL': '/api/static/app/logo_mail.png'
      },
      {
        'id': 275,
        'name': 'Nexpose',
        'logoURL': '/api/static/app/logo_nexpose.png'
      }
    ],
    // action池
    action: {
      273: [
        { "name": "get_attack_details", "description": "This action gets details for a particular attack", "parameters": [{ "name": "attack_id", "required": true, "data_type": "string", "description": "Attack id" }], "output": [{ "data_path": "AttackDescriptor.DosDirection", "data_type": "string" }, { "data_path": "AttackDescriptor.Severity", "data_type": "number" }, { "data_path": "AttackDescriptor.UiCategory", "data_type": "string" }, { "data_path": "AttackDescriptor.attackId", "data_type": "string" }, { "data_path": "AttackDescriptor.industryIds.CVE", "data_type": "string" }, { "data_path": "AttackDescriptor.industryIds.microsoft", "data_type": "string" }, { "data_path": "AttackDescriptor.industryIds.bugtraq", "data_type": "string" }, { "data_path": "AttackDescriptor.industryIds.CERT", "data_type": "string" }, { "data_path": "AttackDescriptor.industryIds.archNIDS", "data_type": "string" }, { "data_path": "AttackDescriptor.name", "data_type": "string" }] },
        { "name": "get_a_domain", "description": "This action gets the specified domain", "parameters": [{ "name": "domainId", "required": true, "data_type": "number", "description": "Domain Id" }], "output": [{ "data_path": "SubscriberDescriptor.domainId", "data_type": "number" }, { "data_path": "SubscriberDescriptor.parentDomainId", "data_type": "number" }, { "data_path": "SubscriberDescriptor.domainName", "data_type": "string" }, { "data_path": "SubscriberDescriptor.contactPerson", "data_type": "string" }, { "data_path": "SubscriberDescriptor.emailAddress", "data_type": "string" }, { "data_path": "SubscriberDescriptor.title", "data_type": "string" }, { "data_path": "SubscriberDescriptor.contactPhoneNumber", "data_type": "string" }, { "data_path": "SubscriberDescriptor.companyPhoneNumber", "data_type": "string" }, { "data_path": "SubscriberDescriptor.organization", "data_type": "string" }, { "data_path": "SubscriberDescriptor.address.address1", "data_type": "string" }, { "data_path": "SubscriberDescriptor.address.address2", "data_type": "string" }, { "data_path": "SubscriberDescriptor.city", "data_type": "string" }, { "data_path": "SubscriberDescriptor.state", "data_type": "string" }, { "data_path": "SubscriberDescriptor.country", "data_type": "string" }, { "data_path": "SubscriberDescriptor.allowChildAdminDomain", "data_type": "string" }, { "data_path": "SubscriberDescriptor.allowDevices", "data_type": "string" }, { "data_path": "SubscriberDescriptor.defaultIPSPolicy", "data_type": "string" }, { "data_path": "SubscriberDescriptor.defaultReconPolicy", "data_type": "string" }] },
        { "name": "get_all_alerts", "description": "This action retrieves All Alerts.", "parameters": [{ "name": "domainId", "required": true, "data_type": "number", "description": "" }, { "name": "alertstate", "required": true, "data_type": "string", "description": "Alert State, values allowed are, ANY/Acknowledged/Unacknowledged" }, { "name": "timeperiod", "required": true, "data_type": "string", "description": "Time Period, allowed values are\n• LAST_5_MINUTES • LAST_24_HOURS\n• Last_1_HOUR • LAST_7_DAYS\n• LAST_6_HOURS • LAST_14_DAYS\n• LAST_12_HOURS • CUSTOM" }, { "name": "starttime", "required": true, "data_type": "string", "description": "Start time" }, { "name": "endtime", "required": true, "data_type": "string", "description": "End time" }, { "name": "page", "required": true, "data_type": "string", "description": "Next/Previous" }, { "name": "includeChildDomain", "required": true, "data_type": "string", "description": "Chooses to include child domain or not. Default value is true." }, { "name": "search", "required": true, "data_type": "string", "description": "Search" }, { "name": "filter", "required": true, "data_type": "string", "description": "Filter on following column is allowed" }], "output": [{ "data_path": "totalAlertsCount", "data_type": "number" }, { "data_path": "retrievedAlertsCount", "data_type": "number" }, { "data_path": "alertsList.name", "data_type": "string" }, { "data_path": "alertsList.uniqueAlertId", "data_type": "number" }, { "data_path": "alertsList.alertState", "data_type": "string" }, { "data_path": "alertsList.assignTo", "data_type": "string" }, { "data_path": "alertsList.attackSeverity", "data_type": "string" }, { "data_path": "alertsList.event.time", "data_type": "number" }, { "data_path": "alertsList.event.direction", "data_type": "string" }, { "data_path": "alertsList.event.result", "data_type": "string" }, { "data_path": "alertsList.event.attackCount", "data_type": "number" }, { "data_path": "alertsList.event.relevance", "data_type": "string" }, { "data_path": "alertsList.event.alertId", "data_type": "number" }, { "data_path": "alertsList.attack.nspId", "data_type": "number" }, { "data_path": "alertsList.attack.btp", "data_type": "string" }, { "data_path": "alertsList.attack.attackCategory", "data_type": "string" }, { "data_path": "alertsList.attacker.ipAddrs", "data_type": "string" }, { "data_path": "alertsList.attacker.port", "data_type": "number" }, { "data_path": "alertsList.attacker.hostName", "data_type": "string" }, { "data_path": "alertsList.attacker.country", "data_type": "string" }, { "data_path": "alertsList.attacker.os", "data_type": "string" }, { "data_path": "alertsList.attacker.vmName", "data_type": "string" }, { "data_path": "alertsList.attacker.proxyIP", "data_type": "string" }, { "data_path": "alertsList.attacker.user", "data_type": "string" }, { "data_path": "alertsList.attacker.risk", "data_type": "string" }, { "data_path": "alertsList.attacker.networkObject", "data_type": "string" }, { "data_path": "alertsList.target.attackCategory", "data_type": "string" }, { "data_path": "alertsList.target.ipAddrs", "data_type": "string" }, { "data_path": "alertsList.target.port", "data_type": "string" }, { "data_path": "alertsList.target.hostName", "data_type": "string" }, { "data_path": "alertsList.target.country", "data_type": "string" }, { "data_path": "alertsList.target.os", "data_type": "string" }, { "data_path": "alertsList.target.vmName", "data_type": "string" }, { "data_path": "alertsList.target.proxyIP", "data_type": "string" }, { "data_path": "alertsList.target.user", "data_type": "string" }, { "data_path": "alertsList.target.risk", "data_type": "string" }, { "data_path": "alertsList.target.networkObject", "data_type": "string" }, { "data_path": "alertsList.malwareFile.fileName", "data_type": "string" }, { "data_path": "alertsList.malwareFile.fileHash", "data_type": "string" }, { "data_path": "alertsList.malwareFile.malwareName", "data_type": "string" }, { "data_path": "alertsList.malwareFile.malwareConfidence", "data_type": "string" }, { "data_path": "alertsList.malwareFile.engine", "data_type": "string" }, { "data_path": "alertsList.malwareFile.size", "data_type": "number" }, { "data_path": "alertsList.endpointExcutable.name", "data_type": "string" }, { "data_path": "alertsList.endpointExcutable.hash", "data_type": "string" }, { "data_path": "alertsList.endpointExcutable.malwareConfidence", "data_type": "string" }, { "data_path": "alertsList.detection", "data_type": "number" }, { "data_path": "alertsList.application", "data_type": "string" }, { "data_path": "alertsList.layer7Data", "data_type": "string" }] },
      ],
      274: [
        { "name": "send_mail", "description": "send a alert by email", "parameters": [{ "name": "receivers", "required": true, "data_type": "string or list", "description": "the mail receiver" }, { "name": "subject", "required": true, "data_type": "string", "description": "the mail subject" }, { "name": "content", "required": true, "data_type": "string or list", "description": "the mail content" }], "output": [] },
        { "name": "connectivity", "description": "测试app的可用性", "parameters": [], "output": [{ "data_path": "result", "data_type": "bool" }, { "data_path": "msg", "data_type": "string" }] }
      ],
      275: [
        { "name": "connectivity", "description": "用于测试app的可用性", "parameters": [], "output": [{ "data_path": "result", "data_type": "bool" }, { "data_path": "msg", "data_type": "string" }] },
        { "name": "get_assets", "description": "Returns all assets for which you have access.", "parameters": [], "output": [{ "data_path": "resources.*.addresses.*.ip", "data_type": "string" }, { "data_path": "resources.*.addresses.*.mac", "data_type": "string" }, { "data_path": "resources.*.assessedForPolicies", "data_type": "boolean" }, { "data_path": "resources.*.assessedForVulnerabilities", "data_type": "boolean" }, { "data_path": "resources.*.history.*.date", "data_type": "datetime" }, { "data_path": "resources.*.history.*.scanId", "data_type": "number" }, { "data_path": "resources.*.history.*.type", "data_type": "string" }, { "data_path": "resources.*.history.*.version", "data_type": "number" }, { "data_path": "resources.*.id", "data_type": "number" }, { "data_path": "resources.*.ip", "data_type": "string" }, { "data_path": "resources.*.links.*.href", "data_type": "string" }, { "data_path": "resources.*.links.*.rel", "data_type": "string" }, { "data_path": "resources.*.mac", "data_type": "string" }, { "data_path": "resources.*.os", "data_type": "string" }, { "data_path": "resources.*.osFingerprint.description", "data_type": "string" }, { "data_path": "resources.*.osFingerprint.family", "data_type": "string" }, { "data_path": "resources.*.osFingerprint.id", "data_type": "number" }, { "data_path": "resources.*.osFingerprint.product", "data_type": "string" }, { "data_path": "resources.*.osFingerprint.systemName", "data_type": "string" }, { "data_path": "resources.*.osFingerprint.vendor", "data_type": "string" }, { "data_path": "resources.*.rawRiskScore", "data_type": "float" }, { "data_path": "resources.*.riskScore", "data_type": "float" }, { "data_path": "resources.*.services.*.configurations.*.name", "data_type": "float" }, { "data_path": "resources.*.services.*.family", "data_type": "float" }, { "data_path": "resources.*.services.*.configurations.*.value", "data_type": "float" }, { "data_path": "resources.*.services.*.links.*.href", "data_type": "float" }, { "data_path": "resources.*.services.*.links.*.rel", "data_type": "float" }, { "data_path": "resources.*.services.*.name", "data_type": "float" }, { "data_path": "resources.*.services.*.port", "data_type": "float" }, { "data_path": "resources.*.services.*.product", "data_type": "float" }, { "data_path": "resources.*.services.*.protocol", "data_type": "float" }, { "data_path": "resources.*.services.*.vendor", "data_type": "string" }, { "data_path": "resources.*.services.*.version", "data_type": "string" }, { "data_path": "resources.*.vulnerabilities.critical", "data_type": "string" }, { "data_path": "resources.*.vulnerabilities.exploits", "data_type": "string" }, { "data_path": "resources.*.vulnerabilities.malwareKits", "data_type": "string" }, { "data_path": "resources.*.vulnerabilities.moderate", "data_type": "string" }, { "data_path": "resources.*.vulnerabilities.severe", "data_type": "string" }, { "data_path": "resources.*.vulnerabilities.total", "data_type": "float" }, { "data_path": "page.number", "data_type": "number" }, { "data_path": "page.size", "data_type": "number" }, { "data_path": "page.totalResources", "data_type": "number" }, { "data_path": "page.totalPages", "data_type": "number" }] },
        { "name": "get_asset", "description": "Returns the specified asset.", "parameters": [{ "name": "assetId", "required": true, "data_type": "integer", "description": "The identifier of the asset." }], "output": [{ "data_path": "addresses.*.ip", "data_type": "string" }, { "data_path": "addresses.*.mac", "data_type": "string" }, { "data_path": "assessedForPolicies", "data_type": "boolean" }, { "data_path": "assessedForVulnerabilities", "data_type": "boolean" }, { "data_path": "history.*.date", "data_type": "datetime" }, { "data_path": "history.*.scanId", "data_type": "number" }, { "data_path": "history.*.type", "data_type": "string" }, { "data_path": "history.*.version", "data_type": "number" }, { "data_path": "id", "data_type": "number" }, { "data_path": "ip", "data_type": "string" }, { "data_path": "links.*.href", "data_type": "string" }, { "data_path": "links.*.rel", "data_type": "string" }, { "data_path": "mac", "data_type": "string" }, { "data_path": "os", "data_type": "string" }, { "data_path": "osFingerprint.description", "data_type": "string" }, { "data_path": "osFingerprint.family", "data_type": "string" }, { "data_path": "osFingerprint.id", "data_type": "number" }, { "data_path": "osFingerprint.product", "data_type": "string" }, { "data_path": "osFingerprint.systemName", "data_type": "string" }, { "data_path": "osFingerprint.vendor", "data_type": "string" }, { "data_path": "rawRiskScore", "data_type": "float" }, { "data_path": "riskScore", "data_type": "float" }, { "data_path": "services.*.configurations.*.name", "data_type": "float" }, { "data_path": "services.*.family", "data_type": "float" }, { "data_path": "services.*.configurations.*.value", "data_type": "float" }, { "data_path": "services.*.links.*.href", "data_type": "float" }, { "data_path": "services.*.links.*.rel", "data_type": "float" }, { "data_path": "services.*.name", "data_type": "float" }, { "data_path": "services.*.port", "data_type": "float" }, { "data_path": "services.*.product", "data_type": "float" }, { "data_path": "services.*.protocol", "data_type": "float" }, { "data_path": "services.*.vendor", "data_type": "float" }, { "data_path": "services.*.version", "data_type": "float" }, { "data_path": "vulnerabilities.critical", "data_type": "float" }, { "data_path": "vulnerabilities.exploits", "data_type": "float" }, { "data_path": "vulnerabilities.malwareKits", "data_type": "float" }, { "data_path": "vulnerabilities.moderate", "data_type": "float" }, { "data_path": "vulnerabilities.severe", "data_type": "float" }, { "data_path": "vulnerabilities.total", "data_type": "float" }] },
        { "name": "assets_search", "description": "Returns all assets for which you have access that match the given search criteria.", "parameters": [{ "name": "filters", "required": true, "data_type": "Array", "description": "Filters used to match assets. See Search Criteria for more information on the structure and format." }, { "name": "match", "required": true, "data_type": "string", "description": "Valid value: \"any\"\"all\"" }], "output": [{ "data_path": "result", "data_type": "bool" }, { "data_path": "msg", "data_type": "string" }] },
      ]
    },
    // artifacts池
    artifacts: [
      "_source.cef.attackId",
      "_source.cef.sourceAddress",
      "_source.cef.processingResult",
      "_source.cef.aaaa",
      "_source.cef.destinationAddress",
      "_source.cef.test",
      "_source.cef.attackLevel",
      "_source.cef.violationId",
      "_source.cef.attackName"
    ],
    // template池
    template: {
      "Action": {"json":{"templateParameters":[{"name":"funcName","description":"当前节点名称, 具有唯一性以及标识性","default":null},{"name":"pluginName","description":"指定App名称, 在列表中选择","default":null},{"name":"actionName","description":"当前的节点名称","default":null},{"name":"name","description":"指定App里面的操作名称","default":null},{"name":"parameters","description":"Action执行时需要的参数对象, 需要依据`\\n\\r        key: value,`的方式","default":""},{"name":"callback","description":"当前节点的回调代码块","default":""}]},"info":"\ndef {{ funcName }}(container):\n    \"\"\"\n    在指定App下执行Action操作的函数\n    \"\"\"\n    Falcon.debug(container, {{ funcName }})\n\n    parameters = {  {{ parameters }}\n    }\n\n    Falcon.action(\n        container=container,\n        plugin_name={{ pluginName }},\n        action_name=\"{{ funcName }}\",\n        name={{ name }},\n        parameters=parameters\n    )\n\n    {{ callback }}\n\n    return\n"},
      "Callback": {"json":{"templateParameters":[{"name":"result","description":"节点执行的返回结果变量名","default":null},{"name":"nodeCallback","description":"回调的调度代码块","default":null}]},"info":"\n    if {{ result }}:\n        {{ nodeCallback }}\n\n        return\n"},
      "Decisionelif": {"json":{"templateParameters":[{"name":"conditions","description":"判断依据的数组对象: [fieldName, comparison, expected]","default":null},{"name":"logicalOperator","description":"逻辑运算符, 输入 \"and\" 或者 \"or\"其中一个, 在条件数为`1`的时候支持输入\"\"","default":null},{"name":"result","description":"节点执行的返回结果变量名, 列如:matched_results_1 ,一个节点中有多个分支, 返回结果变量名matched_results_{id}","default":null},{"name":"search","description":"需要使用`search`功能的代码块参数","default":"        action_type='search',\n\r        search={{ search }}, \n\r        search_logical_operator={{ searchLogicalOperator }},\n\r         cef_match_time_field={{ cefMatchTimeField }}\n\r","templateParameters":[{"name":"search","description":"格式: [ [ IndexName, SearchNumber, TimeFieldName, TimeInterval, { FieldName: CEFName, ... } ], ... ], TimeInterval: 上下浮动的时间参数, 支持\"10S\", \"2m\", \"2H\", \"1D\"的写法, 并不超过24小时, 且单位字母不区分大小写, 支持任意非重复性组合, CEFName在FIELD.开头时检索container的数据, 否则以原生数据支持","default":null},{"name":"searchLogicalOperator","description":"`search`的时候需要的逻辑运算符","default":null},{"name":"cefMatchTimeField","description":"`search`的时候需要的检索时间字段名","default":null}]},{"name":"callback","description":"当前节点的回调代码块","default":""}]},"info":"\n    {{ result }} = Falcon.filter(\n        container=container,\n        conditions=[\n            {{ conditions }}\n        ],\n        logical_operator={{ logicalOperator }},\n        action_name=\"{{ funcName }}.{{ result }}\"\n    {{ search }}\n    )\n\n    {{ callback_temp }}\n"},
      "Decisionelse": {"json":{"templateParameters":[{"name":"callback","description":"当前节点的回调代码块","default":""}]},"info":"\n    {{ callback }}\n"},
      "Decisionif": {"json":{"templateParameters":[{"name":"funcName","description":"当前节点名称, 具有唯一性以及标识性","default":null},{"name":"conditions","description":"判断依据的数组对象: [fieldName, comparison, expected]","default":null},{"name":"actionName","description":"当前的节点名称","default":null},{"name":"result","description":"节点执行的返回结果变量名, 列如:matched_results_1 ,一个节点中有多个分支, 返回结果变量名matched_results_{id}","default":null},{"name":"search","description":"需要使用`search`功能的代码块参数","default":"        action_type='search',\n\r        search={{ search }}, \n\r        search_logical_operator={{ searchLogicalOperator }},\n\r         cef_match_time_field={{ cefMatchTimeField }}\n\r","templateParameters":[{"name":"search","description":"格式: [ [ IndexName, SearchNumber, TimeFieldName, TimeInterval, { FieldName: CEFName, ... } ], ... ], TimeInterval: 上下浮动的时间参数, 支持\"10S\", \"2m\", \"2H\", \"1D\"的写法, 并不超过24小时, 且单位字母不区分大小写, 支持任意非重复性组合, CEFName在FIELD.开头时检索container的数据, 否则以原生数据支持","default":null},{"name":"searchLogicalOperator","description":"`search`的时候需要的逻辑运算符","default":null},{"name":"cefMatchTimeField","description":"`search`的时候需要的检索时间字段名","default":null}]},{"name":"logicalOperator","description":"逻辑运算符, 输入 \"and\" 或者 \"or\"其中一个, 在条件数为`1`的时候支持输入\"\"","default":null},{"name":"search","description":"需要使用`search`功能的代码块参数","default":null},{"name":"callback","description":"当前节点的回调代码块","default":""}]},"info":"\ndef {{ funcName }}(container):\n    \"\"\"\n    判断函数，判断您选择的数据是否符合预期值\n    \"\"\"\n    Falcon.debug(container, {{ funcName }})\n\n    {{ result }} = Falcon.filter(\n        container=container,\n        conditions=[\n            {{ conditions }}\n        ],\n        logical_operator={{ logicalOperator }},\n        action_name=\"{{ funcName }}.{{ result }}\"\n    {{ search }}\n    )\n\n    {{ callback_temp }}\n\n    {{ elif }}\n\n    {{ else_tmp }}\n\n    return"},
      "Filter": {"json":{"templateParameters":[{"name":"funcName","description":"当前节点名称, 具有唯一性以及标识性","default":null},{"name":"result","description":"节点执行的返回结果变量名","default":null},{"name":"search","description":"需要使用`search`功能的代码块参数","default":"        action_type='search',\n\r        search={{ search }}, \n\r        search_logical_operator={{ searchLogicalOperator }},\n\r         cef_match_time_field={{ cefMatchTimeField }}\n\r","templateParameters":[{"name":"search","description":"格式: [ [ IndexName, SearchNumber, TimeFieldName, TimeInterval, { FieldName: CEFName, ... } ], ... ], TimeInterval: 上下浮动的时间参数, 支持\"10S\", \"2m\", \"2H\", \"1D\"的写法, 并不超过24小时, 且单位字母不区分大小写, 支持任意非重复性组合, CEFName在FIELD.开头时检索container的数据, 否则以原生数据支持","default":null},{"name":"searchLogicalOperator","description":"`search`的时候需要的逻辑运算符","default":null},{"name":"cefMatchTimeField","description":"`search`的时候需要的检索时间字段名","default":null}]},{"name":"conditions","description":"判断依据的数组对象: [fieldName, comparison, expected]","default":null},{"name":"logicalOperator","description":"逻辑运算符, 输入 \"and\" 或者 \"or\"其中一个, 在条件数为`1`的时候支持输入\"\"","default":null},{"name":"actionName","description":"当前的节点名称","default":null},{"name":"search","description":"需要使用`search`功能的代码块参数","default":null},{"name":"callback","description":"当前节点的回调代码块","default":""}]},"info":"\ndef {{ funcName }}(container):\n    \"\"\"\n    判断函数，判断您选择的数据是否符合预期值\n    \"\"\"\n    Falcon.debug(container, {{ funcName }})\n\n    {{ result }} = Falcon.filter(\n        container=container,\n        conditions=[\n            {{ conditions }}\n        ],\n        logical_operator={{ logicalOperator }},\n        action_name = \"{{ funcName }}\"\n    {{ search }}\n    )\n\n    {{ callback_temp }}\n\n    return\n"},
      "Finish": {"json":{"templateParameters":[]},"info":"def finish():\n    \"\"\" 工作流结束 \"\"\"\n    Falcon.debug(container, 'finish')\n\n    Falcon.finish()\n"},
      "Imports": {"json":{"templateParameters":[{"name":"importModel","description":"需要其他第三方模块的导入代码块","default":""}]},"info":"# _*_ coding: utf-8 _*_\nimport extend\nfrom falcon import Falcon\n\n{{ importModel }}\n\n"},
      "Onstart": {"json":{"templateParameters":[{"name":"callback","description":"当前节点的回调代码块","default":""}]},"info":"def on_start(container):\n    \"\"\"\n    工作流开始运行的触发器调度函数\n    \"\"\"\n    Falcon.debug(container, 'on_start')\n\n    {{ callback }}\n\n    return\n"}
  }
  }).write()

  return db
}
